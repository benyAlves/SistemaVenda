/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bernardo.venda.visao;

import bernardo.venda.controle.FornecedorControle;
import bernardo.venda.controle.ProdutoControle;
import bernardo.venda.controle.ProdutoVendaControle;
import bernardo.venda.controle.TransacaoControle;
import bernardo.venda.pojo.Fornecedor;
import bernardo.venda.pojo.Produto;
import bernardo.venda.pojo.ProdutoVenda;
import bernardo.venda.pojo.ProdutoVendaId;
import bernardo.venda.pojo.Transacao;
import bernardo.venda.tablemodel.TabelaProduto;
import bernardo.venda.tablemodel.TabelaProdutoEstoque;
import bernardo.venda.util.Icone;
import bernardo.venda.util.Util;
import bernardo.venda.util.ValidarCampo;
import bernardo.venda.util.ValidarCampoDouble;
import java.awt.Color;
import java.awt.Component;
import java.awt.Window;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author dalves
 */
public class ProdutoView extends javax.swing.JPanel {

    
    private static ProdutoControle pc = new ProdutoControle();
    private static List<Produto> listaProdutos;
    private static Produto produto;
    private static Produto produtoProcurado;
    private static FornecedorControle fornecedorControle = new FornecedorControle();
    private static TabelaProduto modeloTabela;
    List<ProdutoVenda> listaProdutosVenda;
    private List<Produto> listaAux = new ArrayList();
    private TransacaoControle transControle = new TransacaoControle();
    private ProdutoVendaControle pvControle = new ProdutoVendaControle();
    private Fornecedor fornecedor;
    private double custoProdutoProcurado;
    private Transacao transacao;
    /**
     * Creates new form ProdutoView
     */
    public ProdutoView() {
        initComponents();
        tabelaProduto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        actualizarTabelaProduto();
        AutoCompleteDecorator.decorate(procurarEntrada, produtosNome(), true);
        txtCusto.setDocument(new ValidarCampoDouble(6));
        txtQuant.setDocument(new ValidarCampo(3));
        txtQuant.setText("1");
    }

    
     public static void actualizarTabelaProduto() {
        listaProdutos = pc.findAll();
        modeloTabela = new TabelaProduto(listaProdutos);
        tabelaProduto.setModel(modeloTabela);
        tabelaProduto.getColumnModel().getColumn(0).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(1).setMinWidth(350);
        tabelaProduto.getColumnModel().getColumn(2).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(3).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(4).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(5).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(6).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(7).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(8).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(9).setMinWidth(200);
        tabelaProduto.getColumnModel().getColumn(10).setMinWidth(200);
        tabelaProduto.getColumnModel().getColumn(11).setMinWidth(200);
    }

    public static Produto getProduto() {
        return produto;
    }

    public void setProduto(Produto produto) {
        ProdutoView.produto = produto;
    }

    public static void preecheFornecedores() {
        Util.preencheComboBox(ProdutoView.cmbxFornecedor, fornecedorControle.fornecedoresNomes());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProduto = new org.jdesktop.swingx.JXTable(){
            public Component prepareRenderer(TableCellRenderer renderer,
                int rowIndex, int vColIndex) {

                AbstractTableModel m = modeloTabela;
                Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);

                // altera a cor de background da linha para vermelho e foreground para branco
                // quando o valor da coluna 3 for igual a fechado
                if (tabelaProduto.getValueAt(rowIndex, 10).toString().equals("Abaixo do Estoque Mínimo")) {
                    c.setBackground(new Color(255,204,51));
                    c.setForeground(Color.white);
                }else if(tabelaProduto.getValueAt(rowIndex, 10).toString().equals("Indisponível")) {
                    c.setBackground(new Color(255, 0, 0));
                    c.setForeground(Color.white);
                } else {
                    // mantem a cor padrão de foreground
                    c.setForeground(getForeground());

                    // determina a cor de background da linha selecionada
                    if(isCellSelected(rowIndex, vColIndex)) {
                        c.setBackground(new Color(184, 207, 229));
                    } else {
                        // linhas não selecionadas, manter cor de background padrão
                        c.setBackground(getBackground());
                    }

                }
                return c;
            }
        };
        jPanel1 = new javax.swing.JPanel();
        txtProcuraP = new org.jdesktop.swingx.JXSearchField();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnLancar = new javax.swing.JButton();
        procurarEntrada = new org.jdesktop.swingx.JXSearchField();
        jLabel1 = new javax.swing.JLabel();
        txtQuant = new javax.swing.JTextField();
        txtCusto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        cmbxTransacao = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaEstoque = new org.jdesktop.swingx.JXTable();
        jPanel11 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cmbxFornecedor = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        btnNovoForn = new javax.swing.JButton();
        checkAlterarCusto = new javax.swing.JCheckBox();

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));

        jButton1.setBackground(new java.awt.Color(246, 168, 168));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/Delete_1.png"))); // NOI18N
        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/Edit.png"))); // NOI18N
        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(165, 254, 160));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/plus-24.png"))); // NOI18N
        jButton3.setText("Novo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/Mind Map.png"))); // NOI18N
        jButton4.setText("Clonar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2), "Lista de Produtos"));

        tabelaProduto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(tabelaProduto);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        txtProcuraP.setBackground(new java.awt.Color(166, 250, 175));
        txtProcuraP.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtProcuraP.setPrompt("Digite o Codigo ou o nome do produto para procurar");
        txtProcuraP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcuraPActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jRadioButton2.setText("Abaixo do Estoque Mínimo");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Todos");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jRadioButton1)
                .addGap(30, 30, 30)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(txtProcuraP, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProcuraP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Estoque", new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/New Product.png")), jPanel2); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        btnLancar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnLancar.setText("Lançar");
        btnLancar.setEnabled(false);
        btnLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancarActionPerformed(evt);
            }
        });

        procurarEntrada.setBackground(new java.awt.Color(166, 250, 175));
        procurarEntrada.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        procurarEntrada.setPrompt("Digite o codigo ou o nome do produto");
        procurarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurarEntradaActionPerformed(evt);
            }
        });
        procurarEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                procurarEntradaKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel1.setText("Quantidade:");

        txtQuant.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtQuant.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuant.setText("1");
        txtQuant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantActionPerformed(evt);
            }
        });
        txtQuant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantKeyReleased(evt);
            }
        });

        txtCusto.setEditable(false);
        txtCusto.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustoKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Custo Unitário:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Total:");

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        cmbxTransacao.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cmbxTransacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Entrada de Estoque", "Saída de Estoque" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Tipo de Transação:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbxTransacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(procurarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLancar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbxTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(procurarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLancar))
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2), "Lista de Transações"));

        tabelaEstoque.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tabelaEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaEstoqueMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaEstoque);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));

        btnGuardar.setBackground(new java.awt.Color(165, 254, 160));
        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/ok-24.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnRemover.setBackground(new java.awt.Color(246, 168, 168));
        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/Delete_1.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemover)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnRemover))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        cmbxFornecedor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cmbxFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbxFornecedor.setEnabled(false);
        cmbxFornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxFornecedorItemStateChanged(evt);
            }
        });
        cmbxFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbxFornecedorKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Fornecedor:");

        btnNovoForn.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnNovoForn.setText("Novo");
        btnNovoForn.setEnabled(false);
        btnNovoForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoFornActionPerformed(evt);
            }
        });

        checkAlterarCusto.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        checkAlterarCusto.setText("Atualizar o Preço da Compra");
        checkAlterarCusto.setToolTipText("Alterar o custo do produto");
        checkAlterarCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAlterarCustoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkAlterarCusto)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNovoForn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAlterarCusto)
                    .addComponent(jLabel13)
                    .addComponent(cmbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovoForn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Entrada e Saida de Estoque", new javax.swing.ImageIcon(getClass().getResource("/bernardo/venda/imagens/Sell Stock.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        removerProduto();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linha = tabelaProduto.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione o produto que deseja actualizar");
            return;
        }

        Produto p = produtoSelecionado(linha);
        Window pai = SwingUtilities.getWindowAncestor(this);
        RegistoProdutoView rg = new RegistoProdutoView(pai, "Registo de Produto");
        rg.setModal(true);
        rg.setLocationRelativeTo(null);
        rg.preencheCampos(p);
        rg.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Window pai = SwingUtilities.getWindowAncestor(this);
        RegistoProdutoView rg = new RegistoProdutoView(pai, "Registo de Produto");
        rg.setModal(true);
        rg.setLocationRelativeTo(null);
        rg.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int linha = tabelaProduto.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione o produto que deseja clonar");
            return;
        }

        Produto p = produtoSelecionado(linha);
        Window pai = SwingUtilities.getWindowAncestor(this);
        RegistoProdutoView rg = new RegistoProdutoView(pai, "Registo de Produto");
        rg.setModal(true);
        rg.setLocationRelativeTo(null);
        rg.clonarProduto(p);
        rg.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtProcuraPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcuraPActionPerformed
        procuraNatabela(txtProcuraP.getText());
    }//GEN-LAST:event_txtProcuraPActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        filtrar("Abaixo do Estoque Mínimo");
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        filtrar(null);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void btnLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancarActionPerformed
        try {
            lancarProduto(produtoProcurado);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Informe uma quantidade válida");
        }
        ;
        btnLancar.setEnabled(false);
    }//GEN-LAST:event_btnLancarActionPerformed

    private void procurarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurarEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_procurarEntradaActionPerformed

    private void procurarEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_procurarEntradaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                produtoProcurado = new Produto();
                Produto p = pc.findByName("descricao", procurarEntrada.getText());

                if (p != null) {
                    if (checkAlterarCusto.isSelected()) {
                        txtCusto.requestFocus();
                        txtCusto.selectAll();
                        txtCusto.setText((p.getPrecoCompra() + "").replace(".", ","));
                        this.custoProdutoProcurado = Util.convertStringEmDouble(txtCusto.getText());
                        txtTotal.setText((p.getPrecoCompra() * Util.convertStringEmInteiro(txtQuant.getText()) + "").replace(".", ","));
                    } else {
                        txtCusto.setText((p.getPrecoCompra() + "").replace(".", ","));
                        this.custoProdutoProcurado = Util.convertStringEmDouble(txtCusto.getText());
                        txtTotal.setText((p.getPrecoCompra() * Util.convertStringEmInteiro(txtQuant.getText()) + "").replace(".", ","));
                        txtQuant.requestFocus();
                        txtQuant.selectAll();

                    }
                    btnLancar.setEnabled(true);
                    produtoProcurado.setCodigoBarras(p.getCodigoBarras());
                    produtoProcurado.setDescricao(p.getDescricao());
                    produtoProcurado.setPrecoCompra(custoProdutoProcurado);

                } else {
                    JOptionPane.showMessageDialog(this, "Produto não foi encontrado");
                }
            } catch (ParseException ex) {
                Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_procurarEntradaKeyReleased

    private void txtQuantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantActionPerformed

    private void txtQuantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantKeyReleased
        try {
            if (txtQuant.getText().trim().isEmpty()) {
                txtTotal.setText("0,00");
                return;
            }
            txtTotal.setText(custoProdutoProcurado * Util.convertStringEmInteiro(txtQuant.getText()) + "");
        } catch (ParseException ex) {
            Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                lancarProduto(produtoProcurado);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Informe uma quantidade válida");
            }
        }
    }//GEN-LAST:event_txtQuantKeyReleased

    private void txtCustoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                this.custoProdutoProcurado = Util.convertStringEmDouble(txtCusto.getText());
                txtTotal.setText((custoProdutoProcurado * Util.convertStringEmInteiro(txtQuant.getText()) + "").replace(".", ","));
            } catch (ParseException ex) {
                Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtCustoKeyReleased

    private void tabelaEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEstoqueMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaEstoqueMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (cmbxTransacao.getSelectedIndex() == 0) {
            if (this.transacao != null) {
                actualizaTransacao(transacao, listaProdutosVenda);
            } else {
                entradaEstoque();
                JOptionPane.showMessageDialog(this, "Entrada de Estoque efectuada", "Informação", 1, Icone.INFORMACAO);
            }
        } else {
            saidaEstoque();
            JOptionPane.showMessageDialog(this, "Saída de Estoque efectuada");
        }
        tabelaEstoque.setModel(new TabelaProdutoEstoque(null));
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

    }//GEN-LAST:event_btnRemoverActionPerformed

    private void cmbxFornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxFornecedorItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (cmbxFornecedor.getSelectedIndex() != 0) {
                Fornecedor f = fornecedorControle.buscaPorNome(cmbxFornecedor.getSelectedItem().toString());
                this.fornecedor = f;
            }
        }
    }//GEN-LAST:event_cmbxFornecedorItemStateChanged

    private void cmbxFornecedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbxFornecedorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxFornecedorKeyReleased

    private void btnNovoFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoFornActionPerformed
        Window pai = SwingUtilities.getWindowAncestor(this);
        RegistoFornecedorView rg = new RegistoFornecedorView(pai, "Fornecedores");
        rg.setModal(true);
        rg.setPai(this.getName());
        rg.setLocationRelativeTo(null);
        rg.setVisible(true);
    }//GEN-LAST:event_btnNovoFornActionPerformed

    private void checkAlterarCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAlterarCustoActionPerformed
        if (this.checkAlterarCusto.isSelected()) {
            ProdutoView.preecheFornecedores();
            cmbxFornecedor.setEnabled(true);
            txtCusto.setEditable(true);
            btnNovoForn.setEnabled(true);
        } else {
            cmbxFornecedor.removeAllItems();
            cmbxFornecedor.setEnabled(false);
            txtCusto.setEditable(false);
            btnNovoForn.setEnabled(false);
        }
    }//GEN-LAST:event_checkAlterarCustoActionPerformed

    private void procuraNatabela(String text) {
        TableRowSorter<TableModel> tr = new TableRowSorter<>(modeloTabela);
        tabelaProduto.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(text, 0, 1));
        tabelaProduto.updateUI();
    }

    private void removerProduto() {
        int linha = tabelaProduto.getSelectedRow();
        if (linha != -1) {
            Object[] opcoes = {"Sim", "Não"};
            int op = JOptionPane.showOptionDialog(this, "Deseja mesmo remover esse produto?", "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (op == 0) {
                Produto p = TabelaProduto.getProdutoAt(linha);
                if (pc.remover(p)) {
                    JOptionPane.showMessageDialog(this, "Produto removido!");
                    actualizarTabela(p);
                    tabelaProduto.clearSelection();
                    tabelaProduto.updateUI();
                } else {
                    JOptionPane.showMessageDialog(this, "Ocorreu um erro ao remover", "Erro de remoção", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione o Produto que deseja remover");
        }
    }

    private void removerProdutoListaEstocagem() {
        int linha = tabelaProduto.getSelectedRow();
        if (linha != -1) {
            Produto p = TabelaProdutoEstoque.getProdutoAt(linha);
            listaAux.remove(p);
            actualizarTabelaEstocagem(this.listaAux);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione o Produto que deseja remover");
        }
    }

    private void actualizarTabela(Produto p) {
        listaProdutos.remove(p);
        tabelaProduto.setModel(new TabelaProduto(listaProdutos));
        tabelaProduto.getColumnModel().getColumn(0).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(1).setMinWidth(350);
        tabelaProduto.getColumnModel().getColumn(2).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(3).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(4).setMinWidth(150);
        tabelaProduto.getColumnModel().getColumn(5).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(6).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(7).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(8).setMinWidth(100);
        tabelaProduto.getColumnModel().getColumn(9).setMinWidth(200);
        tabelaProduto.getColumnModel().getColumn(10).setMinWidth(200);
        tabelaProduto.getColumnModel().getColumn(11).setMinWidth(200);
    }

    private void filtrar(String object) {
        TableRowSorter<TableModel> tr = new TableRowSorter<>(modeloTabela);
        tabelaProduto.setRowSorter(tr);
        if (object != null) {
            tr.setRowFilter(RowFilter.regexFilter(object, 10));
        } else {
            tabelaProduto.setModel(modeloTabela);
        }

    }

    public List<String> produtosNome() {
        List<String> nomes = new ArrayList<>();
        List<Produto> prod = listaProdutos;
        for (int i = 0; i < prod.size(); i++) {
            nomes.add(prod.get(i).getDescricao());
        }
        return nomes;
    }

    private void lancarProduto(Produto produtoProcurado) throws ParseException {
        int quantAdicional = Util.convertStringEmInteiro(txtQuant.getText());
        if (quantAdicional < 0) {
            JOptionPane.showMessageDialog(this, "Informe uma quantidade maior que zero (0)");
            return;
        }
        if (checkAlterarCusto.isSelected()) {
            produtoProcurado.setFornecedor(fornecedor);
            produtoProcurado.setPrecoCompra(custoProdutoProcurado);
        }

        produtoProcurado.setQuantidadeActual(quantAdicional);

        if (!existe(produtoProcurado))
            this.listaAux.add(produtoProcurado);

        actualizarTabelaEstocagem(this.listaAux);

    }

    private void actualizarTabelaEstocagem(List<Produto> listaAux) {
        tabelaEstoque.setModel(new TabelaProdutoEstoque(listaAux));
        tabelaEstoque.getColumnModel().getColumn(0).setMinWidth(100);
        tabelaEstoque.getColumnModel().getColumn(1).setMinWidth(350);
    }

    private boolean existe(Produto pv) {
        for (int i = 0; i < listaAux.size(); i++) {
            if (pv.getDescricao().equals(listaAux.get(i).getDescricao())) {
                int quantidade = listaAux.get(i).getQuantidadeActual() + pv.getQuantidadeActual();
                pv.setQuantidadeActual(quantidade);
                listaAux.remove(listaAux.get(i));
                listaAux.add(i, pv);
                return true;
            }
        }
        return false;
    }

    private void entradaEstoque() {
        transacao = new Transacao(CaixaPane.caixa, MainView.utilizadorLogado, new Date(), 0.0, 0.0, "Entrada de Estoque", "não", 0.0);
        transacao.setHora(new Date());

        listaProdutosVenda = new ArrayList<>();
        for (int i = 0; i < listaAux.size(); i++) {
            int quantAdd = listaAux.get(i).getQuantidadeActual();
            System.out.println(quantAdd);
            String descricao = listaAux.get(i).getDescricao();
            Produto p = pc.findByName("descricao", descricao);
            if (checkAlterarCusto.isSelected()) {
                p.setFornecedor(listaAux.get(i).getFornecedor());
                p.setPrecoCompra(listaAux.get(i).getPrecoCompra());
            }
            p.setQuantidadeActual(quantAdd + p.getQuantidadeActual());


            if (pc.atualizar(p) != null) {
                ProdutoVenda pv = new ProdutoVenda(null, p, transacao, 0, quantAdd, 0);
                listaProdutosVenda.add(pv);
            }
        }
        guardaTransacao(transacao, listaProdutosVenda);
    }

    private void saidaEstoque() {
        transacao = new Transacao(CaixaPane.caixa, MainView.utilizadorLogado, new Date(), 0.0, 0.0, "Saida de Estoque", "não", 0.0);
        transacao.setHora(new Date());

        List<ProdutoVenda> listaProdutosVenda = new ArrayList<>();
        for (int i = 0; i < listaAux.size(); i++) {
            int quantAdd = listaAux.get(i).getQuantidadeActual();
            System.out.println(quantAdd);
            String descricao = listaAux.get(i).getDescricao();
            Produto p = pc.findByName("descricao", descricao);
            if (quantAdd > p.getQuantidadeActual())
                return;
            else
                p.setQuantidadeActual(p.getQuantidadeActual() - quantAdd);
            if (pc.atualizar(p) != null) {
                ProdutoVenda pv = new ProdutoVenda(null, p, transacao, 0, 0, quantAdd);
                listaProdutosVenda.add(pv);
            }
        }
        guardaTransacao(transacao, listaProdutosVenda);

    }

    private void guardaTransacao(Transacao transacao, List<ProdutoVenda> listaProdutos) {
        transacao.setProdutoVendas(listaProdutos);
        if (transControle.guardar(transacao) != null) {
            guardarProdutosDaTransacao(transacao);
        }
    }

    private void actualizaTransacao(Transacao transacao, List<ProdutoVenda> listaProdutos) {
        transacao.setProdutoVendas(listaProdutos);
        if (transControle.atualizar(transacao) != null) {

        }
    }

    private void guardarProdutosDaTransacao(Transacao transacao) {
        List<ProdutoVenda> lista = transacao.getProdutoVendas();
        for (int i = 0; i < lista.size(); i++) {
            ProdutoVenda pd = lista.get(i);
            ProdutoVendaId id = new ProdutoVendaId(transacao.getIdTransacao(), pd.getProduto().getIdProduto());
            pd.setId(id);
            pvControle.guardar(pd);
        }
    }

//    private void geraRelatorio() {
//        try {
//            
//            String caminho = "relatorios/eport_product.jrxml";
//            JasperReport jasper = JasperCompileManager.compileReport(caminho);
//             Map<String, Object> parametros;
//            List<Map<?, ?>> list = new ArrayList <>(0);
//            for(int i=0; i<listaProdutos.size(); i++){
//                parametros = new HashMap<>();
//                parametros.put("codigoBarras", listaProdutos.get(i).getCodigoBarras());
//                parametros.put("descricao",listaProdutos.get(i).getDescricao());
//                parametros.put("quantidadeActual", listaProdutos.get(i).getQuantidadeActual());
//                parametros.put("precoVenda", listaProdutos.get(i).getPrecoVenda());
//                parametros.put("loja", "Loja Teste 1");
//                parametros.put("endereco", "Avenida Bernardo Alves Maluleque nº2016");
//                list.add(parametros);
//            }
//           
//            
//            JRBeanCollectionDataSource data = new JRBeanCollectionDataSource(list, false);
//            JasperPrint print = JasperFillManager.fillReport(jasper ,null, data);
//            JasperViewer jv = new JasperViewer(print, false);
//            jv.setFitWidthZoomRatio();
//            jv.setVisible(true);
//            
//            
//        } catch (JRException ex) {
//            System.out.println("Errou");
//           JXErrorPane ep = new JXErrorPane();
//         ep.setErrorInfo(new ErrorInfo("Erro", "SDD", "detalhe", "Erro", null, Level.ALL, null));
//         ep.setVisible(true);
//        }
//    }

    private Produto produtoSelecionado(int linha) {
        if (tabelaProduto.getRowCount() < listaProdutos.size()) {
            for (int i = 0; i < listaProdutos.size(); i++) {
                if (((String) tabelaProduto.getValueAt(linha, 1)).equals(listaProdutos.get(i).getDescricao())) {
                    return listaProdutos.get(i);
                }
            }
        }
        return TabelaProduto.getProdutoAt(linha);
    }

    void setTransacaoActualizar(Transacao findById) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLancar;
    private javax.swing.JButton btnNovoForn;
    private javax.swing.JButton btnRemover;
    private javax.swing.JCheckBox checkAlterarCusto;
    public static javax.swing.JComboBox<String> cmbxFornecedor;
    private javax.swing.JComboBox cmbxTransacao;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXSearchField procurarEntrada;
    private org.jdesktop.swingx.JXTable tabelaEstoque;
    private static org.jdesktop.swingx.JXTable tabelaProduto;
    private javax.swing.JTextField txtCusto;
    private org.jdesktop.swingx.JXSearchField txtProcuraP;
    private javax.swing.JTextField txtQuant;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
