package bernardo.venda.pojo;
// Generated Feb 3, 2016 4:08:05 PM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Caixa generated by hbm2java
 */
@Entity
@Table(name = "caixa"
        , catalog = "vendabd"
)
public class Caixa implements java.io.Serializable {


    private Long idCaixa;
    private Utilizador utilizador;
    private Date dataAbertura;
    private double valorInicial;
    private Double valorFinal;
    private Double valorAdicionado;
    private Double valorRetirado;
    private Boolean aberto;
    private Date dataFechamento;
    private Double valorInformado;
    private String observacao;
    private List<Transacao> transacaos = new ArrayList(0);

    public Caixa() {
    }


    public Caixa(Utilizador utilizador, Date dataAbertura, double valorInicial) {
        this.utilizador = utilizador;
        this.dataAbertura = dataAbertura;
        this.valorInicial = valorInicial;
    }

    public Caixa(Utilizador utilizador, Date dataAbertura, double valorInicial, Double valorFinal, Double valorAdicionado, Double valorRetirado, Boolean aberto, Date dataFechamento, Double valorInformado, String observacao, List<Transacao> transacaos) {
        this.utilizador = utilizador;
        this.dataAbertura = dataAbertura;
        this.valorInicial = valorInicial;
        this.valorFinal = valorFinal;
        this.valorAdicionado = valorAdicionado;
        this.valorRetirado = valorRetirado;
        this.aberto = aberto;
        this.dataFechamento = dataFechamento;
        this.valorInformado = valorInformado;
        this.observacao = observacao;
        this.transacaos = transacaos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "idCaixa", unique = true, nullable = false)
    public Long getIdCaixa() {
        return this.idCaixa;
    }

    public void setIdCaixa(Long idCaixa) {
        this.idCaixa = idCaixa;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Utilizador_idUtilizador", nullable = false)
    public Utilizador getUtilizador() {
        return this.utilizador;
    }

    public void setUtilizador(Utilizador utilizador) {
        this.utilizador = utilizador;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "data_abertura", nullable = false, length = 19)
    public Date getDataAbertura() {
        return this.dataAbertura;
    }

    public void setDataAbertura(Date dataAbertura) {
        this.dataAbertura = dataAbertura;
    }


    @Column(name = "valor_inicial", nullable = false, precision = 22, scale = 0)
    public double getValorInicial() {
        return this.valorInicial;
    }

    public void setValorInicial(double valorInicial) {
        this.valorInicial = valorInicial;
    }


    @Column(name = "valor_final", precision = 22, scale = 0)
    public Double getValorFinal() {
        return this.valorFinal;
    }

    public void setValorFinal(Double valorFinal) {
        this.valorFinal = valorFinal;
    }


    @Column(name = "valor_adicionado", precision = 22, scale = 0)
    public Double getValorAdicionado() {
        return this.valorAdicionado;
    }

    public void setValorAdicionado(Double valorAdicionado) {
        this.valorAdicionado = valorAdicionado;
    }


    @Column(name = "valor_retirado", precision = 22, scale = 0)
    public Double getValorRetirado() {
        return this.valorRetirado;
    }

    public void setValorRetirado(Double valorRetirado) {
        this.valorRetirado = valorRetirado;
    }


    @Column(name = "aberto")
    public Boolean getAberto() {
        return this.aberto;
    }

    public void setAberto(Boolean aberto) {
        this.aberto = aberto;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "data_fechamento", length = 19)
    public Date getDataFechamento() {
        return this.dataFechamento;
    }

    public void setDataFechamento(Date dataFechamento) {
        this.dataFechamento = dataFechamento;
    }


    @Column(name = "valor_informado", precision = 22, scale = 0)
    public Double getValorInformado() {
        return this.valorInformado;
    }

    public void setValorInformado(Double valorInformado) {
        this.valorInformado = valorInformado;
    }


    @Column(name = "observacao", length = 100)
    public String getObservacao() {
        return this.observacao;
    }

    public void setObservacao(String observacao) {
        this.observacao = observacao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "caixa")
    public List<Transacao> getTransacaos() {
        return this.transacaos;
    }

    public void setTransacaos(List<Transacao> transacaos) {
        this.transacaos = transacaos;
    }


}


