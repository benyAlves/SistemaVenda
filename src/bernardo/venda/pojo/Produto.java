package bernardo.venda.pojo;
// Generated Feb 3, 2016 4:08:05 PM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Produto generated by hbm2java
 */
@Entity
@Table(name = "produto"
        , catalog = "vendabd"
        , uniqueConstraints = {@UniqueConstraint(columnNames = "codigo_barras"), @UniqueConstraint(columnNames = "descricao")}
)
public class Produto implements java.io.Serializable {


    private Long idProduto;
    private Categoria categoria;
    private Fornecedor fornecedor;
    private String codigoBarras;
    private String descricao;
    private double precoCompra;
    private double precoVenda;
    private int quantidadeMin;
    private byte[] foto;
    private String unidadeMedida;
    private Integer quantidadeMax;
    private Integer quantidadeActual;
    private String observacao;
    private List<ProdutoVenda> produtoVendas = new ArrayList(0);

    public Produto() {
    }


    public Produto(String descricao, double precoCompra, double precoVenda, int quantidadeMin) {
        this.descricao = descricao;
        this.precoCompra = precoCompra;
        this.precoVenda = precoVenda;
        this.quantidadeMin = quantidadeMin;
    }

    public Produto(Categoria categoria, String descricao, double precoCompra, double precoVenda, int quantidadeMin, Integer quantidadeActual) {
        this.categoria = categoria;
        this.descricao = descricao;
        this.precoCompra = precoCompra;
        this.precoVenda = precoVenda;
        this.quantidadeMin = quantidadeMin;
        this.quantidadeActual = quantidadeActual;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "idProduto", unique = true, nullable = false)
    public Long getIdProduto() {
        return this.idProduto;
    }

    public void setIdProduto(Long idProduto) {
        this.idProduto = idProduto;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Categoria_idCategoria")
    public Categoria getCategoria() {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Fornecedor_idFornecedor")
    public Fornecedor getFornecedor() {
        return this.fornecedor;
    }

    public void setFornecedor(Fornecedor fornecedor) {
        this.fornecedor = fornecedor;
    }


    @Column(name = "codigo_barras", length = 25)
    public String getCodigoBarras() {
        return this.codigoBarras;
    }

    public void setCodigoBarras(String codigoBarras) {
        this.codigoBarras = codigoBarras;
    }


    @Column(name = "descricao", unique = true, nullable = false, length = 45)
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }


    @Column(name = "preco_compra", precision = 22, scale = 0)
    public double getPrecoCompra() {
        return this.precoCompra;
    }

    public void setPrecoCompra(double precoCompra) {
        this.precoCompra = precoCompra;
    }


    @Column(name = "preco_venda", nullable = false, precision = 22, scale = 0)
    public double getPrecoVenda() {
        return this.precoVenda;
    }

    public void setPrecoVenda(double precoVenda) {
        this.precoVenda = precoVenda;
    }


    @Column(name = "quantidade_min")
    public int getQuantidadeMin() {
        return this.quantidadeMin;
    }

    public void setQuantidadeMin(int quantidadeMin) {
        this.quantidadeMin = quantidadeMin;
    }


    @Column(name = "quantidade_max")
    public Integer getQuantidadeMax() {
        return this.quantidadeMax;
    }

    public void setQuantidadeMax(Integer quantidadeMax) {
        this.quantidadeMax = quantidadeMax;
    }


    @Column(name = "quantidade_actual")
    public Integer getQuantidadeActual() {
        return this.quantidadeActual;
    }

    public void setQuantidadeActual(Integer quantidadeActual) {
        this.quantidadeActual = quantidadeActual;
    }


    @Column(name = "observacao", length = 100)
    public String getObservacao() {
        return this.observacao;
    }

    public void setObservacao(String observacao) {
        this.observacao = observacao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "produto")
    public List<ProdutoVenda> getProdutoVendas() {
        return this.produtoVendas;
    }

    public void setProdutoVendas(List<ProdutoVenda> produtoVendas) {
        this.produtoVendas = produtoVendas;
    }

    @Column(name = "foto")
    public byte[] getFoto() {
        return foto;
    }

    public void setFoto(byte[] foto) {
        this.foto = foto;
    }

    @Column(name = "unidade_medida", length = 45)
    public String getUnidadeMedida() {
        return unidadeMedida;
    }

    public void setUnidadeMedida(String unidadeMedida) {
        this.unidadeMedida = unidadeMedida;
    }


}


